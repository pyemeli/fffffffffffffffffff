package com.learncode;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileWriter;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

public class RegistrationFormmm extends JFrame {
    private JTextField textProjectCharge;
    private JComboBox<String> comboBoxArea;
    private JTextField textFieldProjectName;
    private JComboBox<String> comboBoxRegion;
    private JComboBox<String> comboBoxTechState;
    private JTextField textFieldDeadline;
    private JButton buttonSubmit;

    private Map<String, String> formData = new HashMap<>();

    public RegistrationFormmm() {
        setTitle("Registration Form");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(400, 300);

        JPanel panel = new JPanel();
        panel.setLayout(new GridLayout(8, 2, 10, 10));

        panel.add(new JLabel("Project Charge Code:"));
        textProjectCharge = new JTextField();
        panel.add(textProjectCharge);

        panel.add(new JLabel("Area:"));
        String[] areas = {"", "Americas", "APAC"};
        comboBoxArea = new JComboBox<>(areas);
        panel.add(comboBoxArea);

        panel.add(new JLabel("Project Name:"));
        textFieldProjectName = new JTextField();
        panel.add(textFieldProjectName);

        panel.add(new JLabel("Region:"));
        String[] defaultRegions = {}; // Initialize with an empty array
        comboBoxRegion = new JComboBox<>(defaultRegions);
        panel.add(comboBoxRegion);

        panel.add(new JLabel("Technology State:"));
        String[] techStates = {"Ameri", "APAC"};
        comboBoxTechState = new JComboBox<>(techStates);
        panel.add(comboBoxTechState);

        panel.add(new JLabel("Deadline (MM-dd-yyyy):"));
        textFieldDeadline = new JTextField();
        panel.add(textFieldDeadline);

        buttonSubmit = new JButton("Submit");
        panel.add(buttonSubmit);

        // Add ActionListener to the "Area" dropdown to update the "Region" dropdown options
        comboBoxArea.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                updateRegionOptions();
            }
        });

        buttonSubmit.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Get user input
                String projectCharge = textProjectCharge.getText();
                String area = (String) comboBoxArea.getSelectedItem();
                String projectName = textFieldProjectName.getText();
                String region = (String) comboBoxRegion.getSelectedItem();
                String techState = (String) comboBoxTechState.getSelectedItem();
                String deadline = textFieldDeadline.getText();

                // Validate project charge code and date format (you can add more comprehensive validation)
                if (!validateProjectCharge(projectCharge)) {
                    JOptionPane.showMessageDialog(null, "Invalid project charge code.");
                } else if (!isValidDateFormat(deadline)) {
                    JOptionPane.showMessageDialog(null, "Invalid date format. Please enter a date in MM-dd-yyyy format.");
                } else {
                    // Save the form data in the data structure
                    formData.put("Project Charge Code", projectCharge);
                    formData.put("Area", area);
                    formData.put("Project Name", projectName);
                    formData.put("Region", region);
                    formData.put("Technology State", techState);
                    formData.put("Deadline", deadline);

                    // Specify the path to the "My Documents" folder on your system
                    String myDocumentsFolderPath = System.getProperty("user.home") + "\\Documents";
                    // Specify the text file path within the "My Documents" folder
                    String textFilePath = myDocumentsFolderPath + "\\registration_form.txt";

                    // Save the form data to a text file
                    saveFormDataToText(formData, textFilePath);

                    // You can also clear the form fields if desired
                    clearFormFields();

                    JOptionPane.showMessageDialog(null, "Form data saved successfully!");
                }
            }
        });

        add(panel);
        setVisible(true);
    }

    private void clearFormFields() {
        textProjectCharge.setText("");
        comboBoxArea.setSelectedItem("");
        textFieldProjectName.setText("");
        comboBoxRegion.setSelectedItem("");
        comboBoxTechState.setSelectedItem("");
        textFieldDeadline.setText("");
    }

    private boolean validateProjectCharge(String projectCharge) {
        projectCharge = projectCharge.toLowerCase();
        return projectCharge.length() == 10 && (projectCharge.startsWith("i-") || projectCharge.startsWith("e-") || projectCharge.startsWith("m-"));
    }

    private boolean isValidDateFormat(String date) {
        try {
            SimpleDateFormat dateFormat = new SimpleDateFormat("MM-dd-yyyy");
            dateFormat.setLenient(false);
            dateFormat.parse(date);
            return true;
        } catch (ParseException e) {
            return false;
        }
    }

    private void updateRegionOptions() {
        String selectedArea = (String) comboBoxArea.getSelectedItem();
        if ("".equals(selectedArea)) {
            comboBoxRegion.setModel(new DefaultComboBoxModel<>(new String[]{}));
        } else if ("Americas".equals(selectedArea)) {
            String[] americasRegions = {"", "Central", "West", "East", "FSO", "Canada", "Israel", "MeCAR", "SAR"};
            comboBoxRegion.setModel(new DefaultComboBoxModel<>(americasRegions));
        } else if ("APAC".equals(selectedArea)) {
            String[] apacRegions = {"", "ASEAN", "FSO", "Greater China", "Korea", "Oceania"};
            comboBoxRegion.setModel(new DefaultComboBoxModel<>(apacRegions));
        } else {
            // If none selected or unknown area, set an empty array
            comboBoxRegion.setModel(new DefaultComboBoxModel<>(new String[]{}));
        }
    }

    private void saveFormDataToText(Map<String, String> formData, String textFilePath) {
        try (FileWriter writer = new FileWriter(textFilePath)) {
            for (Map.Entry<String, String> entry : formData.entrySet()) {
                String field = entry.getKey();
                String value = entry.getValue();
                writer.write(field + ": " + value + "\n");
            }
            System.out.println("Text file saved to: " + textFilePath);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                new RegistrationFormmm();
            }
        });
    }
}