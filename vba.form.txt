' Variables for capturing user input
Dim projectCharge As String
Dim area As String
Dim projectName As String
Dim Region As String
Dim techState As String
Dim Deadline As String
Dim dtToday As String
   
  

' UserForm initialization
Private Sub UserForm_Initialize()

 ' Clear existing items (if any)
    ComboBox3.Clear

    ' Add items to ComboBox4
    ComboBox3.AddItem "Ameri"
    ComboBox3.AddItem "APAC"

    ' Optionally, set a default selection
    ComboBox3.Value = "Americ"



    ' Clear existing items (if any)
    ComboBox4.Clear

    ' Add items to ComboBox4
    ComboBox4.AddItem "Americas"
    ComboBox4.AddItem "APAC"

    ' Optionally, set a default selection
    ComboBox4.Value = "Americas"



    ' Set the initial value for the TextBox control (e.g., today's date)
    Me.DateTimePicker1.Text = Format(Date, "MM-dd-yyyy")

    ' Set the format for the DatePicker control
    'Me.DateTimePicker1.Format = dtpCustom
    'Me.DateTimePicker1.CustomFormat = "MM-dd-yyyy"

    ' Set the minimum date for the DatePicker control (e.g., today's date)
    'Me.DatePicker1.Value = Date
End Sub

' ComboBox4 Change event to populate ComboBox5
Private Sub ComboBox4_Change()
    Me.ComboBox5.Clear ' Clear the existing items in ComboBox5
    
    If Me.ComboBox4.Text = "Americas" Then
        Me.ComboBox5.AddItem "Central"
        Me.ComboBox5.AddItem "West"
        Me.ComboBox5.AddItem "East"
        Me.ComboBox5.AddItem "FSO"
        Me.ComboBox5.AddItem "Canada"
        Me.ComboBox5.AddItem "Israel"
        Me.ComboBox5.AddItem "MeCAR"
        Me.ComboBox5.AddItem "SAR"
    ElseIf Me.ComboBox4.Text = "APAC" Then
        Me.ComboBox5.AddItem "ASEAN"
        Me.ComboBox5.AddItem "FSO"
        Me.ComboBox5.AddItem "Greater China"
        Me.ComboBox5.AddItem "Korea"
        Me.ComboBox5.AddItem "Oceania"
    End If
End Sub

' DateTimePicker1 Change event for date validation
Private Sub DateTimePicker1_Change()
    
        Dim userInput As String
    userInput = InputBox("Enter a date (MM-dd-yyyy format):", "Date Input")

    ' Check if the user entered a date
    If userInput <> "" Then
        ' Validate the date format (you can add more comprehensive validation)
        If IsDate(userInput) Then
            ' Update the TextBox with the entered date
            Me.DateTimePicker1.Text = Format(CDate(userInput), "MM-dd-yyyy")
        Else
            MsgBox "Invalid date format. Please enter a date in MM-dd-yyyy format."
        End If
    End If
End Sub

' Button1 Click event for sending email
Private Sub Button1_Click()
    ' Get user input
    projectCharge = Me.TextProject_Charge.Value
    area = Me.ComboBox4.Value
    projectName = Me.TextBox1.Value
    Region = Me.ComboBox5.Value
    techState = Me.ComboBox3.Value
    Deadline = Me.DateTimePicker1.Value ' Get the date from the DateTimePicker

    Debug.Print "Project_Charge: " & projectCharge
    
    ' Validate the Project Charge Code
    If ValidateProjectChargeCode(projectCharge) = False Then
        MsgBox "Invalid project charge code. Please make sure it's exactly 10 characters long and starts with 'I-', 'E-', or 'M-'."
        Exit Sub
    End If

    ' Validate the Deadline (Date cannot be in the past)
    dtToday = Format(Date, "dd mmmm yyyy")
    
    If Deadline < dtToday Then
        MsgBox "Target deadline cannot be a date before today's date."
        Exit Sub
    End If
   
    UserForm1.PrintForm
    
    ' Send the email
    SendEmail projectCharge, area, projectName, Region, techState, Deadline

    ' Optionally close the user form after sending
    Me.Hide
End Sub

' Function to validate the Project Charge Code
Function ValidateProjectChargeCode(chargeCode As String) As Boolean
    chargeCode = LCase(chargeCode)
    
    If Len(chargeCode) = 10 And (Left(chargeCode, 2) = "i-" Or Left(chargeCode, 2) = "e-" Or Left(chargeCode, 2) = "m-") Then
        ' Check if the chargeCode is different from the specific values
        If chargeCode <> "i-12345678" And chargeCode <> "e-12345678" And chargeCode <> "m-12345678" Then
            ValidateProjectChargeCode = True ' Project Charge Code meets the criteria
        Else
            ValidateProjectChargeCode = False ' Project Charge Code is not allowed
        End If
    Else
        ValidateProjectChargeCode = False ' Project Charge Code does not meet the criteria
    End If
End Function

' Function to send the email
Sub SendEmail(projectCharge As String, area As String, projectName As String, Region As String, techState As String, Deadline As String)
    Dim OutApp As Object
    Dim OutMail As Object

    ' Create the Outlook application
    Set OutApp = CreateObject("Outlook.Application")
    ' Create a new email
    Set OutMail = OutApp.CreateItem(0)

    ' Compose the email
    With OutMail
        .To = "recipient@example.com" ' Change to the recipient's email address
        .Subject = "Project Details"
        .Body = "Area: " & area & vbCrLf & _
                "Project Name: " & projectName & vbCrLf & _
                "Project Charge Code: " & projectCharge & vbCrLf & _
                "Region: " & Region & vbCrLf & _
                "Technology State: " & techState & vbCrLf & _
                "Deadline: " & Deadline
        ' Uncomment the following line if you want to send the email immediately
        '.Send
    End With

    ' Clean up
    Set OutMail = Nothing
    Set OutApp = Nothing
End Sub
